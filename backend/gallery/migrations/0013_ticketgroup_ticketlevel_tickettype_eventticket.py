# Generated by Django 4.2.7 on 2025-09-26 19:58

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    dependencies = [
        ("gallery", "0012_remove_payment_metadata_event_end_date_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="TicketGroup",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("description", models.TextField(blank=True)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Ticket Group",
                "verbose_name_plural": "Ticket Groups",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="TicketLevel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("description", models.TextField(blank=True)),
                ("display_order", models.PositiveIntegerField(default=0)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Ticket Level",
                "verbose_name_plural": "Ticket Levels",
                "ordering": ["display_order", "name"],
            },
        ),
        migrations.CreateModel(
            name="TicketType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Display name for this ticket type", max_length=100
                    ),
                ),
                ("description", models.TextField(blank=True)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "group",
                    models.ForeignKey(
                        help_text="Group this ticket type belongs to",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="ticket_types",
                        to="gallery.ticketgroup",
                    ),
                ),
                (
                    "level",
                    models.ForeignKey(
                        help_text="Level of this ticket type",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="ticket_types",
                        to="gallery.ticketlevel",
                    ),
                ),
            ],
            options={
                "verbose_name": "Ticket Type",
                "verbose_name_plural": "Ticket Types",
                "ordering": ["group__name", "level__display_order", "name"],
                "unique_together": {("group", "level", "name")},
            },
        ),
        migrations.CreateModel(
            name="EventTicket",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=2, help_text="Price in USD", max_digits=10
                    ),
                ),
                (
                    "quantity_available",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Maximum number of tickets available. Leave empty for unlimited.",
                        null=True,
                    ),
                ),
                (
                    "sale_start",
                    models.DateTimeField(
                        blank=True,
                        help_text="When ticket sales start. Leave empty to start immediately.",
                        null=True,
                    ),
                ),
                (
                    "sale_end",
                    models.DateTimeField(
                        blank=True,
                        help_text="When ticket sales end. Leave empty for no end date.",
                        null=True,
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Whether this ticket type is currently available for purchase",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "event",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="event_tickets",
                        to="gallery.event",
                    ),
                ),
                (
                    "ticket_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="event_tickets",
                        to="gallery.tickettype",
                    ),
                ),
            ],
            options={
                "verbose_name": "Event Ticket",
                "verbose_name_plural": "Event Tickets",
                "ordering": [
                    "ticket_type__group__name",
                    "ticket_type__level__display_order",
                ],
                "unique_together": {("event", "ticket_type")},
            },
        ),
    ]
